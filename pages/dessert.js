import Link from 'next/link'
import { useState } from 'react';
import { Button,Nav,Navbar,Image, Card }   from 'react-bootstrap'
import { RiRefreshLine } from "react-icons/ri";

export default function Index() {

    const   [result,setResult]  =   useState(null)
    const   [images,setImages]  =   useState(null)
    const   [done,setDone]      =   useState(false)
    const   foodName    =   new Array(
        "‡∏ó‡∏±‡∏ö‡∏ó‡∏¥‡∏°‡∏Å‡∏£‡∏≠‡∏ö",
        "‡∏ö‡∏±‡∏ß‡∏•‡∏≠‡∏¢",
        "‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏ö‡∏ß‡∏ä‡∏ä‡∏µ",
        "‡∏°‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡πÑ‡∏™",
        "‡∏ö‡∏¥‡∏á‡∏ã‡∏π",
        "‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°",
        "‡∏Ç‡∏ô‡∏°‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á",
        "‡πÄ‡∏â‡∏≤‡∏Å‡πä‡∏ß‡∏¢",
        "‡∏Ç‡∏ô‡∏°‡∏´‡∏±‡∏ß‡∏•‡πâ‡∏≤‡∏ô",
        "‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á",
        "‡∏™‡∏•‡∏∞‡∏•‡∏≠‡∏¢‡πÅ‡∏Å‡πâ‡∏ß",
        "‡∏Ç‡∏ô‡∏°‡πÑ‡∏ó‡∏¢",
        "‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï")
    const   imgName     =   new Array(
        "dessert/‡∏ó‡∏±‡∏ö‡∏ó‡∏¥‡∏°‡∏Å‡∏£‡∏≠‡∏ö.jpg",
        "dessert/‡∏ö‡∏±‡∏ß‡∏•‡∏≠‡∏¢.jpg",
        "dessert/‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏ö‡∏ß‡∏ä‡∏ä‡∏µ.jpg",
        "dessert/‡∏°‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô.jpg",
        "dessert/‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡πÑ‡∏™.jpg",
        "dessert/‡∏ö‡∏¥‡∏á‡∏ã‡∏π.jpg",
        "dessert/‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°.jpg",
        "dessert/‡∏Ç‡∏ô‡∏°‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á.jpg",
        "dessert/‡πÄ‡∏â‡∏≤‡∏Å‡πä‡∏ß‡∏¢.jpg",
        "dessert/‡∏Ç‡∏ô‡∏°‡∏´‡∏±‡∏ß‡∏•‡πâ‡∏≤‡∏ô.jpg",
        "dessert/‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á.jpg",
        "dessert/‡∏™‡∏•‡∏∞‡∏•‡∏≠‡∏¢‡πÅ‡∏Å‡πâ‡∏ß.jpg",
        "dessert/‡∏Ç‡∏ô‡∏°‡πÑ‡∏ó‡∏¢.jpg",
        "dessert/‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï.jpg")

    const   startRand   =   ()  =>  {
        let random  =   Math.floor(Math.random() * foodName.length)
        let timer   =   setInterval(() => {
            let random  =   Math.floor(Math.random() * foodName.length)
            setResult(foodName[random])
            setImages(imgName[random])
        }, 50)
        setTimeout(() => {
            clearInterval(timer)
            setResult('üî•' +foodName[random]+ 'üî•')
            setImages(imgName[random])
            setDone(true)
        }, 3000);
    }

    return <>
        <style global jsx>{`

            html,
            body,
            .contain-fluid-full {width:100%;height:100%;}

            .container-fluid-full {position:relative;}
            .set-to-middle {position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);}

            body {background-image:url(main/dessert.jpg);}
            .card {background-color:#ffffffd0;}
        `}</style>
        <Navbar bg="dark" variant="dark">
            <Link href="/" passHref><Navbar.Brand >‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£</Navbar.Brand></Link>
            <Navbar.Toggle />
            <Navbar.Collapse className="justify-content-end">
                <Navbar.Text>
                ‡∏´‡∏°‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ñ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
                </Navbar.Text>
            </Navbar.Collapse>
        </Navbar>

        <div className="d-flex justify-content-center">
            <div className="set-to-middle">
                <Card>
                    <Card.Body>
                        { images    ?   <Image src={images} style={{ objectFit : 'cover'}} width={150} height={150} /> :   ''}
                        { result    ?   <p className="text-center my-2">{result}</p> : <Button onClick={startRand} variant="primary" size="lg"><RiRefreshLine />‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£</Button> }
                        { done      ?   <Button variant="success"
                                                className="d-block mx-auto"
                                                size="lg"
                                                onClick={() => {setResult(null)
                                                                setImages(null)
                                                                setDone(!done)
                                                                startRand()}
                                                    }>‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤</Button> : ''}
                    </Card.Body>
                </Card>
            </div>
        </div>
    </>
}